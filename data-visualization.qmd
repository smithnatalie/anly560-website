---
title: "Data Visualization"
format: 
  html:
    theme: lux
---

### **What is a Time Series?**

-   Any metric that is measured over regular time intervals makes a Time Series.

    -   Example: Weather data, Stock prices, Industry forecasts, etc are some of the common ones.

-   The analysis of experimental data that have been observed at different points in time leads to new and unique problems in statistical modeling and inference.

-   The obvious correlation introduced by the sampling of adjacent points in time can severely restrict the applicability of the many conventional statistical methods traditionally dependent on the assumption that these adjacent observations are independent and identically distributed.

### **Data Visualization with Stock Data**

In this section, I am going to be taking a look at the stock prices for three different oil and gas corporations between 2012 and 2022. The corporations being analyzed are:

-   ExxonMobil (XOM)
-   Chevron (CVX)
-   Shell (SHEL)

```{r ,echo=FALSE, message=FALSE, warning=FALSE}
library(flipbookr)
library(tidyverse)
library(ggplot2)
library(forecast)
library(astsa) 
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
```

Below, the head of the data can be seen, which shows the first week of stock prices being analyzed for each of the three corporations.

```{r, echo=FALSE}

options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)

tickers = c("XOM","CVX","SHEL")
for (i in tickers){
  getSymbols(i,
             from = "2012-10-01",
             to = "2022-12-01")}

x <- list(
  title = "date"
)
y <- list(
  title = "value"
)

stock <- data.frame(XOM$XOM.Adjusted,
                    CVX$CVX.Adjusted,
                    SHEL$SHEL.Adjusted)


stock <- data.frame(stock,rownames(stock))
colnames(stock) <- append(tickers,'Dates')

stock$date<-as.Date(stock$Dates,"%Y-%m-%d")
head(stock)
```

The time series plot below shows how each of the three stocks have changed between 2012 and 2022. Chevron appears to be the clear winner, with significantly higher closing prices compared to Shell and ExxonMobil.

```{r, echo=FALSE}
ggplot(stock, aes(x=date)) +
  geom_line(aes(y=XOM, colour="XOM"))+
  geom_line(aes(y=CVX, colour="CVX"))+
  geom_line(aes(y=SHEL, colour="SHEL"))+
   labs(
    title = "Stock Prices for Oil and Gas Corporations",
    subtitle = "From 2012-2022",
    x = "Date",
    y = "Adjusted Closing Prices (USD)")+
    theme(panel.background = element_rect(fill = "white", colour = "grey50"))+ theme(plot.title=element_text(hjust = 0.5))+theme(plot.subtitle=element_text(hjust = 0.5))+
    guides(colour=guide_legend(title="Oil and Gas Companies"))

```

In the next time interactive series plot, we can hover over different points in time to get more in depth information about the specific closing prices for each of the three corporations on specific dates.

One of the clearest takeaways from this plot is the nosedive in closing prices for all three corporations on March 20th, 2020, which is right around when the COVID-19 pandemic began in the United States.

```{r, echo=FALSE}
g4<- ggplot(stock, aes(x=date)) +
  geom_line(aes(y=XOM, colour="XOM"))+
  geom_line(aes(y=CVX, colour="CVX"))+
  geom_line(aes(y=SHEL, colour="SHEL"))+
   labs(
    title = "Stock Prices for Oil and Gas Companies",
    subtitle = "From 2012-2022",
    x = "Date",
    y = "Adjusted Closing Prices (USD)")+
    guides(colour=guide_legend(title="Stock Prices for Oil and Gas Companies")) 


ggplotly(g4) %>%
  layout(hovermode = "x")
```

### **Bitcoin Plot Using plotly**

Here, I will take a look at a single stock price for Bitcoin. The head of the data is seen below.

```{r, echo=FALSE}
#bitc_ALL <- getSymbols("BTC",auto.assign = FALSE, from = "2020-10-01",src="yahoo")
bitc <- getSymbols("BTC",auto.assign = FALSE, from = "2021-09-15",src="yahoo") 
head(bitc)
```

The intial date I am looking at is seen below.

```{r, echo=FALSE}
start(bitc)
```

The final date I am looking at is also seen below.

```{r, echo=FALSE}
end(bitc)
```

More information on the Bitcoin data analyzed during the set time period can be seen below.
```{r, echo=FALSE}
bitc=data.frame(bitc)
bitc <- data.frame(bitc,rownames(bitc))
head(bitc)

colnames(bitc)[7] = "date"
head(bitc)

bitc$date<-as.Date(bitc$date,"%Y-%m-%d")
str(bitc)
```

In the following two plots, one static and one interactive, we can see how the stock price of Bitcoin has decreased since September of 2021. Although it appears to be making a recovery, it is still far from where it was in 2021.

```{r, echo=FALSE}
## ggplot
bitc %>%
  ggplot()+
  geom_line(aes(y=BTC.Adjusted,x=date),color="blue")+   labs(
    title = "Stock Price of Bitcoin",
    subtitle = "From 2021-2023",
    x = "Date",
    y = "Adjusted Closing Prices")+theme(plot.title=element_text(hjust = 0.5))+theme(plot.subtitle=element_text(hjust = 0.5))

## plotly
fig <- plot_ly(bitc, x = ~date, y = ~BTC.Adjusted, type = 'scatter', mode = 'lines')

fig <- fig %>% layout(title = "Stock Price of Bitcoin")
fig
```

The following plot is a basic candlestick chart showing the last 30 opening and closing prices for Bitcoin, beginning in December 2022 and ending mid-January of 2023. 

```{r, echo=FALSE}
#plotly
# candlestick plot

df <- tail(bitc, 30)

figc <- df %>% plot_ly(x = ~date, type="candlestick",
          open = ~BTC.Open, close = ~BTC.Close,
          high = ~BTC.High, low = ~BTC.Low) 
figc <- figc %>% layout(title = "Stock Price of Bitcoin")

figc
```

### **Plotting Climate Data Using plotly**

In the following plots, I will be taking a look at climate data in the Washington D.C. area for year of 2021. 

First, I will take a look at the changing precipitation levels in the area throughout the year as reported by the seven different stations across the DC area.

The stations are:

```{r, echo=FALSE}
climate = read.csv("datasets/climate.csv")
```

```{r, echo=FALSE}
library(tidyquant)
library(plotly)
library(RColorBrewer)
```
```{r, echo=FALSE}
unique(climate[c("STATION", "NAME")])
```
In the scatter plot below, the levels of precipitation across the year can be seen.

Here, we can see that snow only fell in the DC area between January and February of 2021, with a peak of 2 inches on February 2nd.

Rain, as expected, fell in the area during every month of the year, with a peak of about 3.8 inches on August 20th.

```{r, echo=FALSE, message=FALSE, warning=FALSE}
figx = plot_ly(climate, type = "scatter", mode = "markers")%>%
  add_trace(x = ~DATE, y = ~PRCP, name = "Rain", marker = list(color = '#1969B1', line=list(color='#000000', width= 1)))%>%
  add_trace(x = ~DATE, y = ~SNOW, name = "Snow", marker = list(color = '#C6EEFC', line=list(color='#000000', width= 1)))%>%
  layout(showlegend=T)

figx = figx %>% layout(
        title = "Rain vs Snow in Washington DC (2021)",
        xaxis = list(zerolinecolor = '#ffffff',
                      zerolinewidth = 2,
                      gridcolor = 'ffffff',
                      title="Date"),
         yaxis = list(zerolinecolor = '#ffffff',
                      zerolinewidth = 2,
                      gridcolor = 'ffffff',
                      title="Precipitation (Inches)",
                      range=c(0.01, 4)),
         plot_bgcolor='#eff4f7', width = 700
)

figx
```













